# Задача1
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, 
# которые встречаются в обоих наборах.
# На вход подается 2 числа через пробел: n m
# n - кол-во элементов первого множества.
# m - кол-во элементов второго множества.
# Затем подаются элементы каждого множества через пробел в виде строки. 
# ! Писать input() не надо
# Пример
# На входе:
# var1 = '5 4' # количество элементов первого и второго множества
# var2 = '1 3 5 7 9' # элементы первого множества через пробел
# var3 = '2 3 4 5' # элементы второго множества через пробел
# На выходе:
# 3 5

# var1 = '1 4' 
# var2 = '1' 
# var3 = '3 4 5 6' 

# var1 = var1.split() 
# var2 = var2.split() 
# var3 = var3.split()
# n = int(var1[0])
# m = int(var1[1])
# reslist = []
# if n > m:
#     for i in range(len(var2)):
#         for j in range(len(var3)):
#             if var2[i] == var3[j]:
#                 reslist.append(var2[i])
# else:
#     for i in range(len(var3)):
#         for j in range(len(var2)):
#             if var3[i] == var2[j]:
#                 reslist.append(var3[i])

# if n == 1 or m ==1:
#     print(*reslist)
# else:
#     min = reslist[0]
#     for i in range(len(reslist)):
#         if reslist[i] < min:
#             temp = reslist[i]
#             reslist[i] = min
#             min = temp
#     print(*reslist)

#Задача2:
# В фермерском хозяйстве в Карелии выращивают чернику. 
# Черника растет на круглой грядке, и кусты черники высажены 
# по окружности грядки. Каждый куст черники имеет урожайность, 
# которая соответствует количеству ягод на этом кусте.
# Урожайность черничных кустов представлена в виде списка arr, 
# где arr[i] - это урожайность (количество ягод) i-го куста.
# В фермерском хозяйстве внедрена система автоматического сбора 
# черники. Эта система состоит из управляющего модуля и нескольких 
# собирающих модулей. Каждый собирающий модуль может собрать ягоды 
# с одного куста и с двух соседних кустов. Собирающий модуль находится 
# перед определенным кустом, и он может выбирать, 
# с какого куста начать сбор ягод.
# Ваша задача - написать программу, которая определит максимальное 
# число ягод, которое может собрать один собирающий модуль за один 
# заход, находясь перед некоторым кустом грядки.
# Входные данные:
# На вход программе подается список arr, где arr[i] (1 ≤ arr[i] ≤ 1000) - это
# урожайность i-го куста черники. Размер списка не превышает 1000 элементов.
# Выходные данные:
# Программа должна вывести одно целое число - максимальное количество ягод, 
# которое может собрать собирающий модуль, находясь перед некоторым кустом грядки.
# Пример использования
# arr = [5, 8, 6, 4, 9, 2, 7, 3] на выходе: 19
# arr = [10, 8, 6, 4, 2] на выходе: 24
# arr = [2, 4, 6, 8, 10] на выходе: 24
# arr = [2, 4, 10, 4, 2] на выходе: 18

# arr = [2, 4, 10, 4, 2]
# n = len(arr)
# arr1 = []
# for i in range(n):
#     arr1.append(arr[i])
# # print(arr1)
# arr1.append(arr[0])
# arr1.append(arr[1])
# # print(arr1)
# m = len(arr1)
# # print(m)
# resmax = arr1[0] + arr1[1] + arr1[2]
# # print(resmax)
# i = 1
# temp = 0
# for i in range(len(arr1)-2):
#     temp = (arr1[i] + arr1[i+1] + arr1[i+2])
#     # print(i, temp, resmax)
#     if temp > resmax:
#         resmax = temp
#         # print(temp, resmax)
#     i = i + 1
#     # print(i)   
# print(resmax)


# сдано

